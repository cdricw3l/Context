datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum SubscriptionStatus {
  ACTIVE
  CANCELED
  PAST_DUE
  UNPAID
  INCOMPLETE
}

model User {
  id             String           @id @default(uuid())
  email          String           @unique
  password       String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  accounts       Account[]
  subscription   Subscription?
}

model Subscription {
  id                 String           @id @default(cuid()) // Utilisation de cuid() pour générer un ID unique
  userId             String           @unique
  plan               String
  status             SubscriptionStatus
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  user               User             @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                  Int              @id @default(autoincrement())
  userId              String
  provider            String
  providerAccountId   String
  type                String
  accessToken         String
  accessTokenExpires  DateTime?
  refreshToken        String
  refreshTokenExpires DateTime?
  user                User             @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model EventLog {
  id        String   @id @default(cuid())
  eventType String
  eventData Json
  createdAt DateTime @default(now())
}
